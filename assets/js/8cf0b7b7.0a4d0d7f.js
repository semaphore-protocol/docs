"use strict";(self.webpackChunk_semaphore_protocol_website=self.webpackChunk_semaphore_protocol_website||[]).push([[8657],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(a),c=r,h=u["".concat(l,".").concat(c)]||u[c]||m[c]||i;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),i=a(6010),o=a(2389),s=a(7392),l=a(7094),p=a(2466);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function u(e){const{lazy:t,block:a,defaultValue:o,values:u,groupId:m,className:c}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=u??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),g=(0,s.l)(y,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===o?o:o??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:v}=(0,l.U)(),[b,N]=(0,r.useState)(k),w=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=m){const e=f[m];null!=e&&e!==b&&y.some((t=>t.value===e))&&N(e)}const I=e=>{const t=e.currentTarget,a=w.indexOf(t),n=y[a].value;n!==b&&(T(t),N(n),null!=m&&v(m,String(n)))},O=e=>{let t=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]??w[w.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",d.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},c)},y.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,key:t,ref:e=>w.push(e),onKeyDown:O,onClick:I},o,{className:(0,i.Z)("tabs__item",d.tabItem,o?.className,{"tabs__item--active":b===t})}),a??t)}))),t?(0,r.cloneElement)(h.filter((e=>e.props.value===b))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==b})))))}function m(e){const t=(0,o.Z)();return r.createElement(u,(0,n.Z)({key:String(t)},e))}},7807:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var n=a(7462),r=(a(7294),a(3905)),i=a(5488),o=a(5162);const s={sidebar_position:1,title:"Identities"},l="Semaphore identities",p={unversionedId:"guides/identities",id:"version-V3/guides/identities",title:"Identities",description:"In order to join a Semaphore group, a user must first create a Semaphore identity.",source:"@site/versioned_docs/version-V3/guides/identities.mdx",sourceDirName:"guides",slug:"/guides/identities",permalink:"/docs/guides/identities",draft:!1,editUrl:"https://github.com/semaphore-protocol/website/edit/main/versioned_docs/version-V3/guides/identities.mdx",tags:[],version:"V3",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Identities"},sidebar:"version-V3/mySidebar",previous:{title:"Quick setup",permalink:"/docs/quick-setup"},next:{title:"Groups",permalink:"/docs/guides/groups"}},d={},u=[{value:"Create identities",id:"create-identities",level:2},{value:"Install library:",id:"install-library",level:3},{value:"Create random identities",id:"create-random-identities",level:3},{value:"Create deterministic identities",id:"create-deterministic-identities",level:3},{value:"Save your identities",id:"save-your-identities",level:2}],m={toc:u},c="wrapper";function h(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"semaphore-identities"},"Semaphore identities"),(0,r.kt)("p",null,"In order to join a ",(0,r.kt)("a",{parentName:"p",href:"/docs/glossary#semaphore-group"},"Semaphore group"),", a user must first create a ",(0,r.kt)("a",{parentName:"p",href:"/docs/glossary#semaphore-identity"},"Semaphore identity"),".\nA Semaphore identity contains two values generated with the identity:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Identity trapdoor"),(0,r.kt)("li",{parentName:"ul"},"identity nullifier")),(0,r.kt)("p",null,"To use and verify the identity, the identity owner (user) must know the trapdoor and nullifier values.\nTo prevent fraud, the owner should keep both values secret."),(0,r.kt)("h2",{id:"create-identities"},"Create identities"),(0,r.kt)("p",null,"In your code, use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/main/packages/identity"},(0,r.kt)("inlineCode",{parentName:"a"},"@semaphore-protocol/identity"))," library to create a Semaphore identity ",(0,r.kt)("em",{parentName:"p"},"deterministically")," (from the hash of a message) or ",(0,r.kt)("em",{parentName:"p"},"randomly"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-random-identities"},(0,r.kt)("strong",{parentName:"a"},"Create random identities"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-deterministic-identities"},(0,r.kt)("strong",{parentName:"a"},"Create deterministic identities")))),(0,r.kt)("h3",{id:"install-library"},"Install library:"),(0,r.kt)(i.Z,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @semaphore-protocol/identity\n"))),(0,r.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @semaphore-protocol/identity\n"))),(0,r.kt)(o.Z,{value:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @semaphore-protocol/identity\n")))),(0,r.kt)("h3",{id:"create-random-identities"},"Create random identities"),(0,r.kt)("p",null,"To create a random identity, instantiate ",(0,r.kt)("inlineCode",{parentName:"p"},"Identity")," without any parameters. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { Identity } from "@semaphore-protocol/identity"\n\nconst { trapdoor, nullifier, commitment } = new Identity()\n')),(0,r.kt)("p",null,"The new identity contains two random secret values: ",(0,r.kt)("inlineCode",{parentName:"p"},"trapdoor")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"nullifier"),", and one public value: ",(0,r.kt)("inlineCode",{parentName:"p"},"commitment"),"."),(0,r.kt)("p",null,"The Poseidon hash of the identity nullifier and trapdoor is called the ",(0,r.kt)("em",{parentName:"p"},"identity secret"),",\nand its hash is the ",(0,r.kt)("em",{parentName:"p"},"identity commitment"),"."),(0,r.kt)("p",null,"An identity commitment, similarly to Ethereum addresses, is a public value used\nin Semaphore groups to represent the identity of a group member. The secret values are similar to\nEthereum private keys and are used to generate Semaphore zero-knowledge proofs and authenticate signals."),(0,r.kt)("h3",{id:"create-deterministic-identities"},"Create deterministic identities"),(0,r.kt)("p",null,"If you pass a message as a parameter, Semaphore generates ",(0,r.kt)("inlineCode",{parentName:"p"},"trapdoor")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"nullifier"),"\nfrom the ",(0,r.kt)("em",{parentName:"p"},"SHA256")," hash of the message.\nThe message might be a password or a message that the user cryptographically signs with a private key."),(0,r.kt)("p",null,"When using deterministic identities, you should always keep the message secret.\nGiven that the hash is deterministic, anyone with the same message can recreate the same identity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const identity = new Identity("secret-message")\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Building a system to save or recover secret values of Semaphore identities is nontrivial.\nYou may choose to delegate such functionality to existing wallets such as Metamask. For example:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"In Metamask, a user signs a message with the private key of their Ethereum account."),(0,r.kt)("li",{parentName:"ol"},"In your application, the user creates a deterministic identity with the signed message."),(0,r.kt)("li",{parentName:"ol"},"The user can now recreate their Semaphore identity whenever they want by signing the same message with their Ethereum account in Metamask."))),(0,r.kt)("h2",{id:"save-your-identities"},"Save your identities"),(0,r.kt)("p",null,"You can output an identity as a JSON string that you can save and reuse later.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"Identity.toString()")," method generates a JSON array from an identity. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'console.log(identity.toString()) // View the identity trapdoor and nullifier.\n\n// \'["8255d...", "62c41..."]\'\n')),(0,r.kt)("p",null,"The array contains the trapdoor and nullifier."),(0,r.kt)("p",null,"To reuse the saved identity, pass the JSON to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Identity()")," constructor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const identity2 = new Identity(identity.toString())\n")))}h.isMDXComponent=!0}}]);