"use strict";(self.webpackChunk_semaphore_protocol_website=self.webpackChunk_semaphore_protocol_website||[]).push([[3818],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),m=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=m(a),d=n,h=u["".concat(l,".").concat(d)]||u[d]||c[d]||o;return a?r.createElement(h,i(i({ref:t},s),{},{components:a})):r.createElement(h,i({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:n,i[1]=p;for(var m=2;m<o;m++)i[m]=a[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7294),n=a(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>c});var r=a(7462),n=a(7294),o=a(6010),i=a(2389),p=a(7392),l=a(7094),m=a(2466);const s={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function u(e){const{lazy:t,block:a,defaultValue:i,values:u,groupId:c,className:d}=e,h=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=u??h.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),b=(0,p.l)(g,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===i?i:i??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==k&&!g.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:v}=(0,l.U)(),[N,y]=(0,n.useState)(k),w=[],{blockElementScrollPositionUntilNextRender:C}=(0,m.o5)();if(null!=c){const e=f[c];null!=e&&e!==N&&g.some((t=>t.value===e))&&y(e)}const T=e=>{const t=e.currentTarget,a=w.indexOf(t),r=g[a].value;r!==N&&(C(t),y(r),null!=c&&v(c,String(r)))},x=e=>{let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]??w[w.length-1];break}}t?.focus()};return n.createElement("div",{className:(0,o.Z)("tabs-container",s.tabList)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},d)},g.map((e=>{let{value:t,label:a,attributes:i}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>w.push(e),onKeyDown:x,onClick:T},i,{className:(0,o.Z)("tabs__item",s.tabItem,i?.className,{"tabs__item--active":N===t})}),a??t)}))),t?(0,n.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function c(e){const t=(0,i.Z)();return n.createElement(u,(0,r.Z)({key:String(t)},e))}},5535:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>p,metadata:()=>m,toc:()=>u});var r=a(7462),n=(a(7294),a(3905)),o=a(5488),i=a(5162);const p={sidebar_position:2,title:"Groups"},l="Semaphore groups",m={unversionedId:"guides/groups",id:"version-V3/guides/groups",title:"Groups",description:"A Semaphore group contains identity commitments of group members.",source:"@site/versioned_docs/version-V3/guides/groups.mdx",sourceDirName:"guides",slug:"/guides/groups",permalink:"/docs/guides/groups",draft:!1,editUrl:"https://github.com/semaphore-protocol/website/edit/main/versioned_docs/version-V3/guides/groups.mdx",tags:[],version:"V3",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Groups"},sidebar:"version-V3/mySidebar",previous:{title:"Identities",permalink:"/docs/guides/identities"},next:{title:"Proofs",permalink:"/docs/guides/proofs"}},s={},u=[{value:"Off-chain groups",id:"off-chain-groups",level:2},{value:"Create a group",id:"create-a-group",level:3},{value:"Install library:",id:"install-library",level:4},{value:"Add members",id:"add-members",level:3},{value:"Remove or update members",id:"remove-or-update-members",level:3},{value:"On-chain groups",id:"on-chain-groups",level:2}],c={toc:u},d="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"semaphore-groups"},"Semaphore groups"),(0,n.kt)("p",null,"A ",(0,n.kt)("a",{parentName:"p",href:"/docs/glossary/#semaphore-group"},"Semaphore group")," contains ",(0,n.kt)("a",{parentName:"p",href:"/docs/glossary/#identity-commitment"},"identity commitments")," of group members.\nExample uses of groups include the following:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"poll question that attendees join to rate an event,"),(0,n.kt)("li",{parentName:"ul"},"ballot that members join to vote on a proposal,"),(0,n.kt)("li",{parentName:"ul"},"whistleblowers who are verified employees of an organization.")),(0,n.kt)("p",null,"A Semaphore group is an ",(0,n.kt)("a",{parentName:"p",href:"/docs/glossary/#incremental-merkle-tree"},"incremental Merkle tree"),", and group members (i.e., ",(0,n.kt)("a",{parentName:"p",href:"/docs/glossary/#identity-commitments"},"identity commitments"),") are tree leaves.\nSemaphore groups set the following three parameters:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Group id"),": a unique identifier for the group;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Tree depth"),": the maximum number of members a group can contain (",(0,n.kt)("inlineCode",{parentName:"li"},"max size = 2 ^ tree depth"),");"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Members"),": the list of members to initialize the group.")),(0,n.kt)("p",null,"Learn how to work with groups."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#off-chain-groups"},(0,n.kt)("strong",{parentName:"a"},"Off-chain groups"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#on-chain-groups"},(0,n.kt)("strong",{parentName:"a"},"On-chain groups")))),(0,n.kt)("h2",{id:"off-chain-groups"},"Off-chain groups"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-group"},"Create a group")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#add-members"},"Add members")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#remove-or-update-members"},"Remove or update members"))),(0,n.kt)("h3",{id:"create-a-group"},"Create a group"),(0,n.kt)("p",null,"Use the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/group"},(0,n.kt)("inlineCode",{parentName:"a"},"@semaphore-protocol/group"))," library ",(0,n.kt)("inlineCode",{parentName:"p"},"Group")," class to create an off-chain group with the following parameters:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Group id"),": a unique identifier for the group;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Tree depth"),": (",(0,n.kt)("em",{parentName:"li"},"default ",(0,n.kt)("inlineCode",{parentName:"em"},"20")),") the maximum number of members a group can contain (",(0,n.kt)("inlineCode",{parentName:"li"},"max size = 2 ^ tree depth"),")."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Members"),": (",(0,n.kt)("em",{parentName:"li"},"default ",(0,n.kt)("inlineCode",{parentName:"em"},"[]")),") the list of members to initialize the group.")),(0,n.kt)("h4",{id:"install-library"},"Install library:"),(0,n.kt)(o.Z,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @semaphore-protocol/group\n"))),(0,n.kt)(i.Z,{value:"yarn",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @semaphore-protocol/group\n"))),(0,n.kt)(i.Z,{value:"pnpm",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @semaphore-protocol/group\n")))),(0,n.kt)("p",null,"To create a group with default ",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"em"},"treeDepth")),", call the ",(0,n.kt)("inlineCode",{parentName:"p"},"Group")," constructor without the second parameter. For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { Group } from "@semaphore-protocol/group"\n\nconst group = new Group(1)\n')),(0,n.kt)("p",null,"The following example code passes ",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"em"},"treeDepth"))," to create a group for ",(0,n.kt)("inlineCode",{parentName:"p"},"2 ^ 30 = 1073741824")," members:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { Group } from "@semaphore-protocol/group"\n\nconst group = new Group(1, 30)\n')),(0,n.kt)("p",null,"You can also initialize a group with multiple members by passing the list of identity commitments (members) as the third parameter when creating the group:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { Group } from "@semaphore-protocol/group"\n\nconst members = [\n  "11237622825477336339577122413451117718539783476837539122310492284566644730311",\n  "9332663527862709610616009715800254142772436825222910251631161087138559093425",\n  "13255821893820536903335282929376140649646180444238593676033702344407594536519"\n]\nconst group = new Group(1, 20, members)\n')),(0,n.kt)("h3",{id:"add-members"},"Add members"),(0,n.kt)("p",null,"Use the ",(0,n.kt)("inlineCode",{parentName:"p"},"Group addMember")," function to add a member (identity commitment) to a group. For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"group.addMember(identityCommitment)\n")),(0,n.kt)("p",null,"To add a batch of members to a group, pass an array to the ",(0,n.kt)("inlineCode",{parentName:"p"},"Group addMembers")," function. For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"group.addMembers([identityCommitment1, identityCommitment2])\n")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"When you use the same Semaphore identity across multiple groups, if an attacker takes control of that identity all the groups it is part of will be compromised. Consider using different identities for each group.")),(0,n.kt)("h3",{id:"remove-or-update-members"},"Remove or update members"),(0,n.kt)("p",null,"To remove members from a group, pass the member index to the ",(0,n.kt)("inlineCode",{parentName:"p"},"Group removeMember")," function. For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"group.removeMember(0)\n")),(0,n.kt)("p",null,"To update members in a group, pass the member index and the new value to the ",(0,n.kt)("inlineCode",{parentName:"p"},"Group updateMember")," function. For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"group.updateMember(0, 2)\n")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Removing a member from a group sets the node value to a special value (i.e. ",(0,n.kt)("inlineCode",{parentName:"p"},"zeroValue"),").\nGiven that the node isn't removed, and the length of the ",(0,n.kt)("inlineCode",{parentName:"p"},"group.members")," array doesn't change.")),(0,n.kt)("h2",{id:"on-chain-groups"},"On-chain groups"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/contracts/contracts/base/SemaphoreGroups.sol"},(0,n.kt)("inlineCode",{parentName:"a"},"SemaphoreGroups"))," contract uses the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/privacy-scaling-explorations/zk-kit/blob/main/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol"},(0,n.kt)("inlineCode",{parentName:"a"},"IncrementalBinaryTree"))," library and provides methods to create and manage groups."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"You can import ",(0,n.kt)("inlineCode",{parentName:"p"},"SemaphoreGroups.sol")," and other Semaphore contracts from the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/main/packages/contracts"},(0,n.kt)("inlineCode",{parentName:"a"},"@semaphore-protocol/contracts"))," NPM module.")),(0,n.kt)("p",null,"Alternatively, you can use an already deployed ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/contracts/contracts/Semaphore.sol"},(0,n.kt)("inlineCode",{parentName:"a"},"Semaphore.sol"))," contract and use its group external functions."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"Semaphore.sol")," does not check if a member with a specific identity commitment already exists in a group. This check must be done off-chain.")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"Semaphore.sol")," includes a mechanism to verify Semaphore proofs created with old Merkle tree roots, the duration of which can be defined by the admin in the ",(0,n.kt)("inlineCode",{parentName:"p"},"createGroup")," function. Members of a group could then continue to generate valid proofs even after being removed. For more info see the issue ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/issues/98"},"#98"),".")))}h.isMDXComponent=!0}}]);