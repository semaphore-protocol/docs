"use strict";(self.webpackChunk_semaphore_protocol_website=self.webpackChunk_semaphore_protocol_website||[]).push([[8347],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},m=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=l(a),h=o,d=u["".concat(i,".").concat(h)]||u[h]||c[h]||n;return a?r.createElement(d,p(p({ref:t},m),{},{components:a})):r.createElement(d,p({ref:t},m))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,p=new Array(n);p[0]=h;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:o,p[1]=s;for(var l=2;l<n;l++)p[l]=a[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>p});var r=a(7294),o=a(6010);const n={tabItem:"tabItem_Ymn6"};function p(e){let{children:t,hidden:a,className:p}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(n.tabItem,p),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>c});var r=a(7462),o=a(7294),n=a(6010),p=a(2389),s=a(7392),i=a(7094),l=a(2466);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function u(e){const{lazy:t,block:a,defaultValue:p,values:u,groupId:c,className:h}=e,d=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=u??d.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),b=(0,s.l)(g,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===p?p:p??d.find((e=>e.props.default))?.props.value??d[0].props.value;if(null!==f&&!g.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:v}=(0,i.U)(),[y,N]=(0,o.useState)(f),S=[],{blockElementScrollPositionUntilNextRender:w}=(0,l.o5)();if(null!=c){const e=k[c];null!=e&&e!==y&&g.some((t=>t.value===e))&&N(e)}const E=e=>{const t=e.currentTarget,a=S.indexOf(t),r=g[a].value;r!==y&&(w(t),N(r),null!=c&&v(c,String(r)))},G=e=>{let t=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const a=S.indexOf(e.currentTarget)+1;t=S[a]??S[0];break}case"ArrowLeft":{const a=S.indexOf(e.currentTarget)-1;t=S[a]??S[S.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,n.Z)("tabs-container",m.tabList)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":a},h)},g.map((e=>{let{value:t,label:a,attributes:p}=e;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>S.push(e),onKeyDown:G,onClick:E},p,{className:(0,n.Z)("tabs__item",m.tabItem,p?.className,{"tabs__item--active":y===t})}),a??t)}))),t?(0,o.cloneElement)(d.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},d.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function c(e){const t=(0,p.Z)();return o.createElement(u,(0,r.Z)({key:String(t)},e))}},3563:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=a(7462),o=(a(7294),a(3905)),n=a(5488),p=a(5162);const s={sidebar_position:4,title:"Fetching data"},i="Semaphore data",l={unversionedId:"guides/fetching-data",id:"version-V3/guides/fetching-data",title:"Fetching data",description:"To fetch on-chain data from the Semaphore.sol contract, you can use the @semaphore-protocol/data library.",source:"@site/versioned_docs/version-V3/guides/fetching-data.mdx",sourceDirName:"guides",slug:"/guides/fetching-data",permalink:"/docs/guides/fetching-data",draft:!1,editUrl:"https://github.com/semaphore-protocol/website/edit/main/versioned_docs/version-V3/guides/fetching-data.mdx",tags:[],version:"V3",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Fetching data"},sidebar:"version-V3/mySidebar",previous:{title:"Proofs",permalink:"/docs/guides/proofs"},next:{title:"Circuits",permalink:"/docs/technical-reference/circuits"}},m={},u=[{value:"Install library",id:"install-library",level:2},{value:"Fetch data using SemaphoreSubgraph",id:"fetch-data-using-semaphoresubgraph",level:2},{value:"Get group Ids",id:"get-group-ids",level:3},{value:"Get groups",id:"get-groups",level:3},{value:"Get group",id:"get-group",level:3},{value:"Check if an identity commitment is a member of a group",id:"check-if-an-identity-commitment-is-a-member-of-a-group",level:3},{value:"Fetch data using SemaphoreEthers",id:"fetch-data-using-semaphoreethers",level:2},{value:"Get group Ids",id:"get-group-ids-1",level:3},{value:"Get group",id:"get-group-1",level:3},{value:"Get group admin",id:"get-group-admin",level:3},{value:"Get group members",id:"get-group-members",level:3},{value:"Get group verified proofs",id:"get-group-verified-proofs",level:3}],c={toc:u},h="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(h,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"semaphore-data"},"Semaphore data"),(0,o.kt)("p",null,"To fetch on-chain data from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/contracts/contracts/Semaphore.sol"},"Semaphore.sol")," contract, you can use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/main/packages/data"},"@semaphore-protocol/data")," library."),(0,o.kt)("p",null,"There are two ways to do this, using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/data/src/subgraph.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"SemaphoreSubgraph"))," or ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/data/src/ethers.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"SemaphoreEthers")),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"SemaphoreSubgraph")," class uses the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/subgraph"},"Semaphore subgraph"),", which uses ",(0,o.kt)("a",{parentName:"p",href:"https://thegraph.com/"},"The Graph Protocol")," under the hood, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"SemaphoreEthers")," class uses ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ethers-io/ethers.js/"},"Ethers"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#fetch-data-using-semaphoresubgraph"},(0,o.kt)("strong",{parentName:"a"},"Fetch data using SemaphoreSubgraph"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#fetch-data-using-semaphoreethers"},(0,o.kt)("strong",{parentName:"a"},"Fetch data using SemaphoreEthers")))),(0,o.kt)("h2",{id:"install-library"},"Install library"),(0,o.kt)(n.Z,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @semaphore-protocol/data\n"))),(0,o.kt)(p.Z,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @semaphore-protocol/data\n"))),(0,o.kt)(p.Z,{value:"pnpm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @semaphore-protocol/data\n")))),(0,o.kt)("h2",{id:"fetch-data-using-semaphoresubgraph"},"Fetch data using SemaphoreSubgraph"),(0,o.kt)("p",null,"To fetch data using the Semaphore subgraph you can use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/data/src/subgraph.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"SemaphoreSubgraph"))," class from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/main/packages/data"},"@semaphore-protocol/data")," package."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { SemaphoreSubgraph } from "@semaphore-protocol/data"\n\nconst semaphoreSubgraph = new SemaphoreSubgraph()\n\n// or:\nconst semaphoreSubgraph = new SemaphoreSubgraph("arbitrum")\n\n// or:\nconst semaphoreSubgraph = new SemaphoreSubgraph(\n    "https://api.studio.thegraph.com/query/14377/<your-subgraph>/<your-version>"\n)\n')),(0,o.kt)("h3",{id:"get-group-ids"},"Get group Ids"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const groupIds = await semaphoreSubgraph.getGroupIds()\n")),(0,o.kt)("h3",{id:"get-groups"},"Get groups"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const groups = await semaphoreSubgraph.getGroups()\n\n// or\n\nconst groups = await semaphoreSubgraph.getGroups({ members: true, verifiedProofs: true })\n")),(0,o.kt)("h3",{id:"get-group"},"Get group"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const group = await semaphoreSubgraph.getGroup("42")\n\n// or\n\nconst { members, verifiedProofs } = semaphoreSubgraph.getGroup("42", { members: true, verifiedProofs: true })\n')),(0,o.kt)("h3",{id:"check-if-an-identity-commitment-is-a-member-of-a-group"},"Check if an identity commitment is a member of a group"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'await semaphoreSubgraph.isGroupMember(\n    "42",\n    "16948514235341957898454876473214737047419402240398321289450170535251226167324"\n)\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can create an off-chain group using the SemaphoreSubgraph class to fetch members like so:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Group } from "@semaphore-protocol/group"\nimport { SemaphoreSubgraph } from "@semaphore-protocol/data"\n\nconst groupId = "3"\nconst semaphoreSubgraph = new SemaphoreSubgraph("sepolia")\nconst { members } = await semaphoreSubgraph.getGroup(groupId, { members: true })\nconst group = new Group(groupId, 20, members)\n'))),(0,o.kt)("h2",{id:"fetch-data-using-semaphoreethers"},"Fetch data using SemaphoreEthers"),(0,o.kt)("p",null,"To fetch data using Ethers you can use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/data/src/ethers.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"SemaphoreEthers"))," class from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/main/packages/data"},"@semaphore-protocol/data")," package."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { SemaphoreEthers } from "@semaphore-protocol/data"\n\nconst semaphoreEthers = new SemaphoreEthers()\n\n// or:\nconst semaphoreEthers = new SemaphoreEthers("homestead", {\n    address: "semaphore-address",\n    startBlock: 0\n})\n\n// or:\nconst semaphoreEthers = new SemaphoreEthers("http://127.0.0.1:8545", {\n    address: "semaphore-address"\n})\n')),(0,o.kt)("h3",{id:"get-group-ids-1"},"Get group Ids"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const groupIds = await semaphoreEthers.getGroupIds()\n")),(0,o.kt)("h3",{id:"get-group-1"},"Get group"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const group = await semaphoreEthers.getGroup("42")\n')),(0,o.kt)("h3",{id:"get-group-admin"},"Get group admin"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const admin = await semaphoreEthers.getGroupAdmin("42")\n')),(0,o.kt)("h3",{id:"get-group-members"},"Get group members"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const members = await semaphoreEthers.getGroupMembers("42")\n')),(0,o.kt)("h3",{id:"get-group-verified-proofs"},"Get group verified proofs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const verifiedProofs = await semaphoreEthers.getGroupVerifiedProofs("42")\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can create an off-chain group using the SemaphoreEthers class to fetch members like so:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Group } from "@semaphore-protocol/group"\nimport { SemaphoreEthers } from "@semaphore-protocol/data"\n\nconst groupId = "3"\nconst semaphoreEthers = new SemaphoreEthers("sepolia")\nconst members = await semaphoreEthers.getGroupMembers(groupId)\nconst group = new Group(groupId, 20, members)\n'))))}d.isMDXComponent=!0}}]);